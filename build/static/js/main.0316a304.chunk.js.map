{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","delete","concat","status","idForUpdate","personObject","put","Filter","_ref","searchString","handleSearchString","handleClearSearchBox","_jsxs","onSubmit","children","_jsx","text","value","onChange","type","Person","_ref2","person","deletePerson","_Fragment","name","number","onClick","Form","_ref3","addPerson","newName","handleNewName","newNumber","handleNewNumber","Numbers","_ref4","searchMatches","map","i","Notifcation","_ref5","message","className","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","_useState","useState","_useState2","_slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setSearchString","_useState9","_useState10","errorMessage","setErrorMessage","useEffect","personService","initialPersons","clearBox","filter","toLowerCase","includes","extractName","trim","objectToUpdate","find","event","target","preventDefault","alert","returnedPersons","console","log","setTimeout","window","confirm","returnedPersonObject","catch","error","updatedPersons","entry","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.0316a304.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst _delete = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.status)\n  }\n\nconst update = (idForUpdate, personObject)  => {\n    const request = axios.put(`${baseUrl}/${idForUpdate}`, personObject)\n    return request.then(response => response.data)    \n}\n\n\n export default { getAll, create, _delete, update}","import { useState, useEffect } from 'react'\nimport './index.css'\nimport personService from './services/persons'\n\n\nconst Filter =({searchString, handleSearchString, handleClearSearchBox}) => {\n  return (\n    <form onSubmit={handleClearSearchBox} >\n    <div>\n        search\n        <input text='search' value={searchString} onChange={handleSearchString}/>\n        <button type='submit' >clear</button>\n    </div>\n    <br></br>\n    </form>\n    \n  )}\n\nconst Person = ({ person, deletePerson }) => {\n  return (\n    <>\n    <li>{person.name} : {person.number}</li>\n    <button  onClick = {() => deletePerson(person)}>Delete</button>\n    </>\n  )}\n\nconst Form = ({addPerson, newName, handleNewName, newNumber, handleNewNumber}) => {\n    return (\n      <form onSubmit={addPerson} >\n        <div>\n        name\n          <input text='name' value={newName}\n              onChange={handleNewName}/>\n        </div>\n        <div>\n        number\n          <input text='number' value={newNumber}\n              onChange={handleNewNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )}\n\nconst Numbers =  ({searchMatches, deletePerson}) => {\n  return(\n    <ul>\n      {searchMatches.map((person, i)  =>\n            <Person key={i} person={person} deletePerson={deletePerson}  />\n          )}\n    </ul>\n  )\n}\nconst Notifcation = ({message}) => {\n  const notificationStyle = {\n      color: 'green',\n      background: 'lightgrey',\n      fontSize: 20,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10\n    }\n  \n  if (message === null){\n    return null\n  }\n  return (\n    <div className='error' style={notificationStyle}>\n        {message}\n    </div>\n  )\n}\n\n\n\n  \nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchString, setSearchString] = useState ('')\n  const [errorMessage, setErrorMessage] = useState (null)\n  //  .filter syntax:\n  //  const result = words.filter(word => word.length < 8);\n\n  useEffect(() => {\n    personService\n    .getAll() // dont forget the brackets as we are calling the function\n    .then(initialPersons => {\n      setPersons(initialPersons)\n      })\n    \n  }, [])\n  \n  const clearBox = () => {\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  const handleClearSearchBox = (event) =>\n      setSearchString('')\n    \n  const searchMatches = persons.filter(isMatched)\n  const extractName = persons.map(person => person.name.trim().toLowerCase())\n  const objectToUpdate = persons.find(person => person.name.trim().toLowerCase()===newName)\n\n  function isMatched(person)  {\n    return person.name.toLowerCase().includes(searchString.toLowerCase())\n  }\n   \n  const handleSearchString =(event) => {\n    setSearchString(event.target.value)\n  }\n \n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNewName = (event) =>{\n    setNewName(event.target.value)\n    }\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name : newName.trim(),\n      number : newNumber\n      }\n    //console.log(personObject)\n    if (newName=== \"\" || newNumber === ''){\n      alert(`You Haven't entered a Name and Number`)\n    clearBox()\n      //setNewName(\"\")\n    //setNewNumber(\"\")\n    return false\n    }\n    // check if name already exists:\n    if (extractName.includes(newName.trim().toLowerCase())) {\n      //alert(`${newName.trim()} is already added to phonebook`)\n      if(window.confirm(`${newName.trim()} is already added to the phonebook, replace the old number with a new one?`)){\n        //const personForUpdate = persons.find(n => n.name.trim().toLowerCase() ===newName.trim().toLowerCase )  \n        const newPerson =  objectToUpdate\n        console.log('personObject',personObject)\n        console.log('objectToUpdate.id',objectToUpdate.id)\n        personService\n          .update(objectToUpdate.id, personObject)\n          .then(returnedPersonObject => {\n            //console.log(returnedPersonObject.name,returnedPersonObject.number)\n            setPersons(persons.map(person => person.id !== newPerson.id ? person : returnedPersonObject))\n          })\n          .then(setErrorMessage(\n            ` '${newPerson.name}' has been added to phonebook`\n            ))\n          .then(clearBox())\n          //.then(setNewName(\"\"))\n          //.then(setNewNumber(\"\"))\n          \n          .then (setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000))\n          .catch(error => {\n            setErrorMessage(\n              ` '${newPerson.name}' was already removed from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            personService\n            .getAll() // dont forget the brackets as we are calling the function\n            .then(initialPersons => {\n              setPersons(initialPersons)\n              console.log(persons)\n            })\n      clearBox()\n      //setNewName(\"\")\n      //setNewNumber(\"\")\n      return false\n      })\n      }\n    }\n    else{\n      personService\n        .create(personObject)\n        .then(returnedPersons => {\n          setPersons(persons.concat(returnedPersons))\n          \n          console.log(persons)\n      })\n      .then(setErrorMessage(\n        ` '${personObject.name}' has been added to phonebook`\n          ))\n      .then(setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000))\n      clearBox()  \n    //setNewName(\"\")\n    //setNewNumber(\"\")\n    return true\n      } \n    }\n  \n  const deletePerson = (person) => {\n    if (window.confirm(`Do you really want to delete ${person.name}`)) {\n      personService\n      ._delete(person.id)\n      \n      .then(response => {\n        const updatedPersons = persons.filter((entry) => entry.id !== person.id);\n        setPersons(updatedPersons);\n      })\n\n        .then(setErrorMessage(\n          ` '${person.name}' has been deleted from phonebook`\n        )\n        )\n        .then(setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        )\n\n        .catch(error => {\n          setErrorMessage(\n            ` '${person.name}' was already removed from server`\n          )\n          console.log('delete error caught')\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          const updatedPersons = persons.filter((entry) => entry.id !== person.id);\n          setPersons(updatedPersons);\n          \n        })\n            \n        \n        \n        \n    }}\n  \n\n\n  return(\n    <div>\n      <h2>Phonebook</h2>\n      <Notifcation message={errorMessage} />\n      <Filter searchString = {searchString} handleSearchString = {handleSearchString} handleClearSearchBox={handleClearSearchBox} />\n      <Form newName={newName} addPerson={addPerson} handleNewName={handleNewName} \n          newNumber={newNumber} handleNewNumber={handleNewNumber} />\n      \n      <h2>Numbers</h2>\n      <Numbers deletePerson={deletePerson} searchMatches = {searchMatches} />\n      \n    </div>\n  )\n\n  }\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}